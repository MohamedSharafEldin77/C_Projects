
Servo_Motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009fa  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000009fa  00000a6e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001890  00000000  00000000  00000a70  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000051f  00000000  00000000  00002300  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000000c0  00000000  00000000  00002820  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007b3  00000000  00000000  000028e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000024f  00000000  00000000  00003093  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000058a  00000000  00000000  000032e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000fc  00000000  00000000  0000386c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000258  00000000  00000000  00003968  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004b6  00000000  00000000  00003bc0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea ef       	ldi	r30, 0xFA	; 250
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 35 03 	call	0x66a	; 0x66a <main>
  8a:	0c 94 fb 04 	jmp	0x9f6	; 0x9f6 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <DIO_set_PIN_dir>:
#include <avr/io.h>
#include "STD_BIT_MACRO.h"

void DIO_set_PIN_dir (unsigned char portname,unsigned char pin_number_0_7,unsigned char direction)
{
	switch (portname)
  92:	84 34       	cpi	r24, 0x44	; 68
  94:	09 f4       	brne	.+2      	; 0x98 <DIO_set_PIN_dir+0x6>
  96:	71 c0       	rjmp	.+226    	; 0x17a <DIO_set_PIN_dir+0xe8>
  98:	85 34       	cpi	r24, 0x45	; 69
  9a:	48 f4       	brcc	.+18     	; 0xae <DIO_set_PIN_dir+0x1c>
  9c:	82 34       	cpi	r24, 0x42	; 66
  9e:	99 f1       	breq	.+102    	; 0x106 <DIO_set_PIN_dir+0x74>
  a0:	83 34       	cpi	r24, 0x43	; 67
  a2:	08 f0       	brcs	.+2      	; 0xa6 <DIO_set_PIN_dir+0x14>
  a4:	4d c0       	rjmp	.+154    	; 0x140 <DIO_set_PIN_dir+0xae>
  a6:	81 34       	cpi	r24, 0x41	; 65
  a8:	09 f0       	breq	.+2      	; 0xac <DIO_set_PIN_dir+0x1a>
  aa:	83 c0       	rjmp	.+262    	; 0x1b2 <DIO_set_PIN_dir+0x120>
  ac:	0f c0       	rjmp	.+30     	; 0xcc <DIO_set_PIN_dir+0x3a>
  ae:	82 36       	cpi	r24, 0x62	; 98
  b0:	51 f1       	breq	.+84     	; 0x106 <DIO_set_PIN_dir+0x74>
  b2:	83 36       	cpi	r24, 0x63	; 99
  b4:	20 f4       	brcc	.+8      	; 0xbe <DIO_set_PIN_dir+0x2c>
  b6:	81 36       	cpi	r24, 0x61	; 97
  b8:	09 f0       	breq	.+2      	; 0xbc <DIO_set_PIN_dir+0x2a>
  ba:	7b c0       	rjmp	.+246    	; 0x1b2 <DIO_set_PIN_dir+0x120>
  bc:	07 c0       	rjmp	.+14     	; 0xcc <DIO_set_PIN_dir+0x3a>
  be:	83 36       	cpi	r24, 0x63	; 99
  c0:	09 f4       	brne	.+2      	; 0xc4 <DIO_set_PIN_dir+0x32>
  c2:	3e c0       	rjmp	.+124    	; 0x140 <DIO_set_PIN_dir+0xae>
  c4:	84 36       	cpi	r24, 0x64	; 100
  c6:	09 f0       	breq	.+2      	; 0xca <DIO_set_PIN_dir+0x38>
  c8:	74 c0       	rjmp	.+232    	; 0x1b2 <DIO_set_PIN_dir+0x120>
  ca:	57 c0       	rjmp	.+174    	; 0x17a <DIO_set_PIN_dir+0xe8>
	{
		case 'A':
		case 'a':
		if (direction==1)
  cc:	41 30       	cpi	r20, 0x01	; 1
  ce:	69 f4       	brne	.+26     	; 0xea <DIO_set_PIN_dir+0x58>
		{
			SET_BIT(DDRA,pin_number_0_7);
  d0:	2a b3       	in	r18, 0x1a	; 26
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	ac 01       	movw	r20, r24
  d8:	02 c0       	rjmp	.+4      	; 0xde <DIO_set_PIN_dir+0x4c>
  da:	44 0f       	add	r20, r20
  dc:	55 1f       	adc	r21, r21
  de:	6a 95       	dec	r22
  e0:	e2 f7       	brpl	.-8      	; 0xda <DIO_set_PIN_dir+0x48>
  e2:	ba 01       	movw	r22, r20
  e4:	62 2b       	or	r22, r18
  e6:	6a bb       	out	0x1a, r22	; 26
  e8:	08 95       	ret
		}
		else
		{
			CLEAR_BIT(DDRA,pin_number_0_7);
  ea:	2a b3       	in	r18, 0x1a	; 26
  ec:	81 e0       	ldi	r24, 0x01	; 1
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	ac 01       	movw	r20, r24
  f2:	02 c0       	rjmp	.+4      	; 0xf8 <DIO_set_PIN_dir+0x66>
  f4:	44 0f       	add	r20, r20
  f6:	55 1f       	adc	r21, r21
  f8:	6a 95       	dec	r22
  fa:	e2 f7       	brpl	.-8      	; 0xf4 <DIO_set_PIN_dir+0x62>
  fc:	ba 01       	movw	r22, r20
  fe:	60 95       	com	r22
 100:	62 23       	and	r22, r18
 102:	6a bb       	out	0x1a, r22	; 26
 104:	08 95       	ret
		}
		break;
		//DDRA=dir==1?DDRA|(1<<pin):DDRA&~(1<<pin);
		case 'B':
		case 'b':
		if (direction==1)
 106:	41 30       	cpi	r20, 0x01	; 1
 108:	69 f4       	brne	.+26     	; 0x124 <DIO_set_PIN_dir+0x92>
		{
			SET_BIT(DDRB,pin_number_0_7);
 10a:	27 b3       	in	r18, 0x17	; 23
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	ac 01       	movw	r20, r24
 112:	02 c0       	rjmp	.+4      	; 0x118 <DIO_set_PIN_dir+0x86>
 114:	44 0f       	add	r20, r20
 116:	55 1f       	adc	r21, r21
 118:	6a 95       	dec	r22
 11a:	e2 f7       	brpl	.-8      	; 0x114 <DIO_set_PIN_dir+0x82>
 11c:	ba 01       	movw	r22, r20
 11e:	62 2b       	or	r22, r18
 120:	67 bb       	out	0x17, r22	; 23
 122:	08 95       	ret
		}
		else
		{
			CLEAR_BIT(DDRB,pin_number_0_7);
 124:	27 b3       	in	r18, 0x17	; 23
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	ac 01       	movw	r20, r24
 12c:	02 c0       	rjmp	.+4      	; 0x132 <DIO_set_PIN_dir+0xa0>
 12e:	44 0f       	add	r20, r20
 130:	55 1f       	adc	r21, r21
 132:	6a 95       	dec	r22
 134:	e2 f7       	brpl	.-8      	; 0x12e <DIO_set_PIN_dir+0x9c>
 136:	ba 01       	movw	r22, r20
 138:	60 95       	com	r22
 13a:	62 23       	and	r22, r18
 13c:	67 bb       	out	0x17, r22	; 23
 13e:	08 95       	ret
		}
		break;
		case 'C':
		case 'c':
		if (direction==1)
 140:	41 30       	cpi	r20, 0x01	; 1
 142:	69 f4       	brne	.+26     	; 0x15e <DIO_set_PIN_dir+0xcc>
		{
			SET_BIT(DDRC,pin_number_0_7);
 144:	24 b3       	in	r18, 0x14	; 20
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	ac 01       	movw	r20, r24
 14c:	02 c0       	rjmp	.+4      	; 0x152 <DIO_set_PIN_dir+0xc0>
 14e:	44 0f       	add	r20, r20
 150:	55 1f       	adc	r21, r21
 152:	6a 95       	dec	r22
 154:	e2 f7       	brpl	.-8      	; 0x14e <DIO_set_PIN_dir+0xbc>
 156:	ba 01       	movw	r22, r20
 158:	62 2b       	or	r22, r18
 15a:	64 bb       	out	0x14, r22	; 20
 15c:	08 95       	ret
		}
		else
		{
			CLEAR_BIT(DDRC,pin_number_0_7);
 15e:	24 b3       	in	r18, 0x14	; 20
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	ac 01       	movw	r20, r24
 166:	02 c0       	rjmp	.+4      	; 0x16c <DIO_set_PIN_dir+0xda>
 168:	44 0f       	add	r20, r20
 16a:	55 1f       	adc	r21, r21
 16c:	6a 95       	dec	r22
 16e:	e2 f7       	brpl	.-8      	; 0x168 <DIO_set_PIN_dir+0xd6>
 170:	ba 01       	movw	r22, r20
 172:	60 95       	com	r22
 174:	62 23       	and	r22, r18
 176:	64 bb       	out	0x14, r22	; 20
 178:	08 95       	ret
		}
		break;
		case 'D':
		case 'd':
		if (direction==1)
 17a:	41 30       	cpi	r20, 0x01	; 1
 17c:	69 f4       	brne	.+26     	; 0x198 <DIO_set_PIN_dir+0x106>
		{
			SET_BIT(DDRD,pin_number_0_7);
 17e:	21 b3       	in	r18, 0x11	; 17
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	ac 01       	movw	r20, r24
 186:	02 c0       	rjmp	.+4      	; 0x18c <DIO_set_PIN_dir+0xfa>
 188:	44 0f       	add	r20, r20
 18a:	55 1f       	adc	r21, r21
 18c:	6a 95       	dec	r22
 18e:	e2 f7       	brpl	.-8      	; 0x188 <DIO_set_PIN_dir+0xf6>
 190:	ba 01       	movw	r22, r20
 192:	62 2b       	or	r22, r18
 194:	61 bb       	out	0x11, r22	; 17
 196:	08 95       	ret
		}
		else
		{
			CLEAR_BIT(DDRD,pin_number_0_7);
 198:	21 b3       	in	r18, 0x11	; 17
 19a:	81 e0       	ldi	r24, 0x01	; 1
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	ac 01       	movw	r20, r24
 1a0:	02 c0       	rjmp	.+4      	; 0x1a6 <DIO_set_PIN_dir+0x114>
 1a2:	44 0f       	add	r20, r20
 1a4:	55 1f       	adc	r21, r21
 1a6:	6a 95       	dec	r22
 1a8:	e2 f7       	brpl	.-8      	; 0x1a2 <DIO_set_PIN_dir+0x110>
 1aa:	ba 01       	movw	r22, r20
 1ac:	60 95       	com	r22
 1ae:	62 23       	and	r22, r18
 1b0:	61 bb       	out	0x11, r22	; 17
 1b2:	08 95       	ret

000001b4 <DIO_output_PIN_on_port>:
		break;
	}
}
void DIO_output_PIN_on_port (unsigned char portname,unsigned char pin_number_0_7,unsigned char output)
{
	switch (portname)
 1b4:	84 34       	cpi	r24, 0x44	; 68
 1b6:	09 f4       	brne	.+2      	; 0x1ba <DIO_output_PIN_on_port+0x6>
 1b8:	71 c0       	rjmp	.+226    	; 0x29c <DIO_output_PIN_on_port+0xe8>
 1ba:	85 34       	cpi	r24, 0x45	; 69
 1bc:	48 f4       	brcc	.+18     	; 0x1d0 <DIO_output_PIN_on_port+0x1c>
 1be:	82 34       	cpi	r24, 0x42	; 66
 1c0:	99 f1       	breq	.+102    	; 0x228 <DIO_output_PIN_on_port+0x74>
 1c2:	83 34       	cpi	r24, 0x43	; 67
 1c4:	08 f0       	brcs	.+2      	; 0x1c8 <DIO_output_PIN_on_port+0x14>
 1c6:	4d c0       	rjmp	.+154    	; 0x262 <DIO_output_PIN_on_port+0xae>
 1c8:	81 34       	cpi	r24, 0x41	; 65
 1ca:	09 f0       	breq	.+2      	; 0x1ce <DIO_output_PIN_on_port+0x1a>
 1cc:	83 c0       	rjmp	.+262    	; 0x2d4 <DIO_output_PIN_on_port+0x120>
 1ce:	0f c0       	rjmp	.+30     	; 0x1ee <DIO_output_PIN_on_port+0x3a>
 1d0:	82 36       	cpi	r24, 0x62	; 98
 1d2:	51 f1       	breq	.+84     	; 0x228 <DIO_output_PIN_on_port+0x74>
 1d4:	83 36       	cpi	r24, 0x63	; 99
 1d6:	20 f4       	brcc	.+8      	; 0x1e0 <DIO_output_PIN_on_port+0x2c>
 1d8:	81 36       	cpi	r24, 0x61	; 97
 1da:	09 f0       	breq	.+2      	; 0x1de <DIO_output_PIN_on_port+0x2a>
 1dc:	7b c0       	rjmp	.+246    	; 0x2d4 <DIO_output_PIN_on_port+0x120>
 1de:	07 c0       	rjmp	.+14     	; 0x1ee <DIO_output_PIN_on_port+0x3a>
 1e0:	83 36       	cpi	r24, 0x63	; 99
 1e2:	09 f4       	brne	.+2      	; 0x1e6 <DIO_output_PIN_on_port+0x32>
 1e4:	3e c0       	rjmp	.+124    	; 0x262 <DIO_output_PIN_on_port+0xae>
 1e6:	84 36       	cpi	r24, 0x64	; 100
 1e8:	09 f0       	breq	.+2      	; 0x1ec <DIO_output_PIN_on_port+0x38>
 1ea:	74 c0       	rjmp	.+232    	; 0x2d4 <DIO_output_PIN_on_port+0x120>
 1ec:	57 c0       	rjmp	.+174    	; 0x29c <DIO_output_PIN_on_port+0xe8>
	{
		case 'A':
		case 'a':
		if (output==1)
 1ee:	41 30       	cpi	r20, 0x01	; 1
 1f0:	69 f4       	brne	.+26     	; 0x20c <DIO_output_PIN_on_port+0x58>
		{
			SET_BIT(PORTA,pin_number_0_7);
 1f2:	2b b3       	in	r18, 0x1b	; 27
 1f4:	81 e0       	ldi	r24, 0x01	; 1
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	ac 01       	movw	r20, r24
 1fa:	02 c0       	rjmp	.+4      	; 0x200 <DIO_output_PIN_on_port+0x4c>
 1fc:	44 0f       	add	r20, r20
 1fe:	55 1f       	adc	r21, r21
 200:	6a 95       	dec	r22
 202:	e2 f7       	brpl	.-8      	; 0x1fc <DIO_output_PIN_on_port+0x48>
 204:	ba 01       	movw	r22, r20
 206:	62 2b       	or	r22, r18
 208:	6b bb       	out	0x1b, r22	; 27
 20a:	08 95       	ret
		}
		else
		{
			CLEAR_BIT(PORTA,pin_number_0_7);
 20c:	2b b3       	in	r18, 0x1b	; 27
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	ac 01       	movw	r20, r24
 214:	02 c0       	rjmp	.+4      	; 0x21a <DIO_output_PIN_on_port+0x66>
 216:	44 0f       	add	r20, r20
 218:	55 1f       	adc	r21, r21
 21a:	6a 95       	dec	r22
 21c:	e2 f7       	brpl	.-8      	; 0x216 <DIO_output_PIN_on_port+0x62>
 21e:	ba 01       	movw	r22, r20
 220:	60 95       	com	r22
 222:	62 23       	and	r22, r18
 224:	6b bb       	out	0x1b, r22	; 27
 226:	08 95       	ret
		}
		break;
		case 'B':
		case 'b':
		if (output==1)
 228:	41 30       	cpi	r20, 0x01	; 1
 22a:	69 f4       	brne	.+26     	; 0x246 <DIO_output_PIN_on_port+0x92>
		{
			SET_BIT(PORTB,pin_number_0_7);
 22c:	28 b3       	in	r18, 0x18	; 24
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	ac 01       	movw	r20, r24
 234:	02 c0       	rjmp	.+4      	; 0x23a <DIO_output_PIN_on_port+0x86>
 236:	44 0f       	add	r20, r20
 238:	55 1f       	adc	r21, r21
 23a:	6a 95       	dec	r22
 23c:	e2 f7       	brpl	.-8      	; 0x236 <DIO_output_PIN_on_port+0x82>
 23e:	ba 01       	movw	r22, r20
 240:	62 2b       	or	r22, r18
 242:	68 bb       	out	0x18, r22	; 24
 244:	08 95       	ret
		}
		else
		{
			CLEAR_BIT(PORTB,pin_number_0_7);
 246:	28 b3       	in	r18, 0x18	; 24
 248:	81 e0       	ldi	r24, 0x01	; 1
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	ac 01       	movw	r20, r24
 24e:	02 c0       	rjmp	.+4      	; 0x254 <DIO_output_PIN_on_port+0xa0>
 250:	44 0f       	add	r20, r20
 252:	55 1f       	adc	r21, r21
 254:	6a 95       	dec	r22
 256:	e2 f7       	brpl	.-8      	; 0x250 <DIO_output_PIN_on_port+0x9c>
 258:	ba 01       	movw	r22, r20
 25a:	60 95       	com	r22
 25c:	62 23       	and	r22, r18
 25e:	68 bb       	out	0x18, r22	; 24
 260:	08 95       	ret
		}
		break;
		case 'C':
		case 'c':
		if (output==1)
 262:	41 30       	cpi	r20, 0x01	; 1
 264:	69 f4       	brne	.+26     	; 0x280 <DIO_output_PIN_on_port+0xcc>
		{
			SET_BIT(PORTC,pin_number_0_7);
 266:	25 b3       	in	r18, 0x15	; 21
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	ac 01       	movw	r20, r24
 26e:	02 c0       	rjmp	.+4      	; 0x274 <DIO_output_PIN_on_port+0xc0>
 270:	44 0f       	add	r20, r20
 272:	55 1f       	adc	r21, r21
 274:	6a 95       	dec	r22
 276:	e2 f7       	brpl	.-8      	; 0x270 <DIO_output_PIN_on_port+0xbc>
 278:	ba 01       	movw	r22, r20
 27a:	62 2b       	or	r22, r18
 27c:	65 bb       	out	0x15, r22	; 21
 27e:	08 95       	ret
		}
		else
		{
			CLEAR_BIT(PORTC,pin_number_0_7);
 280:	25 b3       	in	r18, 0x15	; 21
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	ac 01       	movw	r20, r24
 288:	02 c0       	rjmp	.+4      	; 0x28e <DIO_output_PIN_on_port+0xda>
 28a:	44 0f       	add	r20, r20
 28c:	55 1f       	adc	r21, r21
 28e:	6a 95       	dec	r22
 290:	e2 f7       	brpl	.-8      	; 0x28a <DIO_output_PIN_on_port+0xd6>
 292:	ba 01       	movw	r22, r20
 294:	60 95       	com	r22
 296:	62 23       	and	r22, r18
 298:	65 bb       	out	0x15, r22	; 21
 29a:	08 95       	ret
		}
		break;
		case 'D':
		case 'd':
		if (output==1)
 29c:	41 30       	cpi	r20, 0x01	; 1
 29e:	69 f4       	brne	.+26     	; 0x2ba <DIO_output_PIN_on_port+0x106>
		{
			SET_BIT(PORTD,pin_number_0_7);
 2a0:	22 b3       	in	r18, 0x12	; 18
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	ac 01       	movw	r20, r24
 2a8:	02 c0       	rjmp	.+4      	; 0x2ae <DIO_output_PIN_on_port+0xfa>
 2aa:	44 0f       	add	r20, r20
 2ac:	55 1f       	adc	r21, r21
 2ae:	6a 95       	dec	r22
 2b0:	e2 f7       	brpl	.-8      	; 0x2aa <DIO_output_PIN_on_port+0xf6>
 2b2:	ba 01       	movw	r22, r20
 2b4:	62 2b       	or	r22, r18
 2b6:	62 bb       	out	0x12, r22	; 18
 2b8:	08 95       	ret
		}
		else
		{
			CLEAR_BIT(PORTD,pin_number_0_7);
 2ba:	22 b3       	in	r18, 0x12	; 18
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	ac 01       	movw	r20, r24
 2c2:	02 c0       	rjmp	.+4      	; 0x2c8 <DIO_output_PIN_on_port+0x114>
 2c4:	44 0f       	add	r20, r20
 2c6:	55 1f       	adc	r21, r21
 2c8:	6a 95       	dec	r22
 2ca:	e2 f7       	brpl	.-8      	; 0x2c4 <DIO_output_PIN_on_port+0x110>
 2cc:	ba 01       	movw	r22, r20
 2ce:	60 95       	com	r22
 2d0:	62 23       	and	r22, r18
 2d2:	62 bb       	out	0x12, r22	; 18
 2d4:	08 95       	ret

000002d6 <DIO_Toggle_PIN_on_port>:
		break;
	}
}
void DIO_Toggle_PIN_on_port (unsigned char portname,unsigned char pin_number_0_7)
{
	switch (portname)
 2d6:	84 34       	cpi	r24, 0x44	; 68
 2d8:	09 f4       	brne	.+2      	; 0x2dc <DIO_Toggle_PIN_on_port+0x6>
 2da:	3d c0       	rjmp	.+122    	; 0x356 <DIO_Toggle_PIN_on_port+0x80>
 2dc:	85 34       	cpi	r24, 0x45	; 69
 2de:	40 f4       	brcc	.+16     	; 0x2f0 <DIO_Toggle_PIN_on_port+0x1a>
 2e0:	82 34       	cpi	r24, 0x42	; 66
 2e2:	f9 f0       	breq	.+62     	; 0x322 <DIO_Toggle_PIN_on_port+0x4c>
 2e4:	83 34       	cpi	r24, 0x43	; 67
 2e6:	50 f5       	brcc	.+84     	; 0x33c <DIO_Toggle_PIN_on_port+0x66>
 2e8:	81 34       	cpi	r24, 0x41	; 65
 2ea:	09 f0       	breq	.+2      	; 0x2ee <DIO_Toggle_PIN_on_port+0x18>
 2ec:	40 c0       	rjmp	.+128    	; 0x36e <DIO_Toggle_PIN_on_port+0x98>
 2ee:	0c c0       	rjmp	.+24     	; 0x308 <DIO_Toggle_PIN_on_port+0x32>
 2f0:	82 36       	cpi	r24, 0x62	; 98
 2f2:	b9 f0       	breq	.+46     	; 0x322 <DIO_Toggle_PIN_on_port+0x4c>
 2f4:	83 36       	cpi	r24, 0x63	; 99
 2f6:	18 f4       	brcc	.+6      	; 0x2fe <DIO_Toggle_PIN_on_port+0x28>
 2f8:	81 36       	cpi	r24, 0x61	; 97
 2fa:	c9 f5       	brne	.+114    	; 0x36e <DIO_Toggle_PIN_on_port+0x98>
 2fc:	05 c0       	rjmp	.+10     	; 0x308 <DIO_Toggle_PIN_on_port+0x32>
 2fe:	83 36       	cpi	r24, 0x63	; 99
 300:	e9 f0       	breq	.+58     	; 0x33c <DIO_Toggle_PIN_on_port+0x66>
 302:	84 36       	cpi	r24, 0x64	; 100
 304:	a1 f5       	brne	.+104    	; 0x36e <DIO_Toggle_PIN_on_port+0x98>
 306:	27 c0       	rjmp	.+78     	; 0x356 <DIO_Toggle_PIN_on_port+0x80>
	{
		case 'A':
		case 'a':
		TOGGLE_BIT(PORTA,pin_number_0_7);
 308:	2b b3       	in	r18, 0x1b	; 27
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	ac 01       	movw	r20, r24
 310:	02 c0       	rjmp	.+4      	; 0x316 <DIO_Toggle_PIN_on_port+0x40>
 312:	44 0f       	add	r20, r20
 314:	55 1f       	adc	r21, r21
 316:	6a 95       	dec	r22
 318:	e2 f7       	brpl	.-8      	; 0x312 <DIO_Toggle_PIN_on_port+0x3c>
 31a:	ba 01       	movw	r22, r20
 31c:	62 27       	eor	r22, r18
 31e:	6b bb       	out	0x1b, r22	; 27
		break;
 320:	08 95       	ret
		case 'B':
		case 'b':
		TOGGLE_BIT(PORTB,pin_number_0_7);
 322:	28 b3       	in	r18, 0x18	; 24
 324:	81 e0       	ldi	r24, 0x01	; 1
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	ac 01       	movw	r20, r24
 32a:	02 c0       	rjmp	.+4      	; 0x330 <DIO_Toggle_PIN_on_port+0x5a>
 32c:	44 0f       	add	r20, r20
 32e:	55 1f       	adc	r21, r21
 330:	6a 95       	dec	r22
 332:	e2 f7       	brpl	.-8      	; 0x32c <DIO_Toggle_PIN_on_port+0x56>
 334:	ba 01       	movw	r22, r20
 336:	62 27       	eor	r22, r18
 338:	68 bb       	out	0x18, r22	; 24
		break;
 33a:	08 95       	ret
		case 'C':
		case 'c':
		TOGGLE_BIT(PORTC,pin_number_0_7);
 33c:	25 b3       	in	r18, 0x15	; 21
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	ac 01       	movw	r20, r24
 344:	02 c0       	rjmp	.+4      	; 0x34a <DIO_Toggle_PIN_on_port+0x74>
 346:	44 0f       	add	r20, r20
 348:	55 1f       	adc	r21, r21
 34a:	6a 95       	dec	r22
 34c:	e2 f7       	brpl	.-8      	; 0x346 <DIO_Toggle_PIN_on_port+0x70>
 34e:	ba 01       	movw	r22, r20
 350:	62 27       	eor	r22, r18
 352:	65 bb       	out	0x15, r22	; 21
		break;
 354:	08 95       	ret
		case 'D':
		case 'd':
		TOGGLE_BIT(PORTD,pin_number_0_7);
 356:	22 b3       	in	r18, 0x12	; 18
 358:	81 e0       	ldi	r24, 0x01	; 1
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	ac 01       	movw	r20, r24
 35e:	02 c0       	rjmp	.+4      	; 0x364 <DIO_Toggle_PIN_on_port+0x8e>
 360:	44 0f       	add	r20, r20
 362:	55 1f       	adc	r21, r21
 364:	6a 95       	dec	r22
 366:	e2 f7       	brpl	.-8      	; 0x360 <DIO_Toggle_PIN_on_port+0x8a>
 368:	ba 01       	movw	r22, r20
 36a:	62 27       	eor	r22, r18
 36c:	62 bb       	out	0x12, r22	; 18
 36e:	08 95       	ret

00000370 <DIO_READ_PIN>:
	}
}
unsigned char DIO_READ_PIN (unsigned char portname,unsigned char pin_number_0_7)
{
	unsigned char val;
	switch (portname)
 370:	84 34       	cpi	r24, 0x44	; 68
 372:	09 f4       	brne	.+2      	; 0x376 <DIO_READ_PIN+0x6>
 374:	51 c0       	rjmp	.+162    	; 0x418 <DIO_READ_PIN+0xa8>
 376:	85 34       	cpi	r24, 0x45	; 69
 378:	40 f4       	brcc	.+16     	; 0x38a <DIO_READ_PIN+0x1a>
 37a:	82 34       	cpi	r24, 0x42	; 66
 37c:	39 f1       	breq	.+78     	; 0x3cc <DIO_READ_PIN+0x5c>
 37e:	83 34       	cpi	r24, 0x43	; 67
 380:	c0 f5       	brcc	.+112    	; 0x3f2 <DIO_READ_PIN+0x82>
 382:	81 34       	cpi	r24, 0x41	; 65
 384:	09 f0       	breq	.+2      	; 0x388 <DIO_READ_PIN+0x18>
 386:	5a c0       	rjmp	.+180    	; 0x43c <DIO_READ_PIN+0xcc>
 388:	0e c0       	rjmp	.+28     	; 0x3a6 <DIO_READ_PIN+0x36>
 38a:	82 36       	cpi	r24, 0x62	; 98
 38c:	f9 f0       	breq	.+62     	; 0x3cc <DIO_READ_PIN+0x5c>
 38e:	83 36       	cpi	r24, 0x63	; 99
 390:	20 f4       	brcc	.+8      	; 0x39a <DIO_READ_PIN+0x2a>
 392:	81 36       	cpi	r24, 0x61	; 97
 394:	09 f0       	breq	.+2      	; 0x398 <DIO_READ_PIN+0x28>
 396:	52 c0       	rjmp	.+164    	; 0x43c <DIO_READ_PIN+0xcc>
 398:	06 c0       	rjmp	.+12     	; 0x3a6 <DIO_READ_PIN+0x36>
 39a:	83 36       	cpi	r24, 0x63	; 99
 39c:	51 f1       	breq	.+84     	; 0x3f2 <DIO_READ_PIN+0x82>
 39e:	84 36       	cpi	r24, 0x64	; 100
 3a0:	09 f0       	breq	.+2      	; 0x3a4 <DIO_READ_PIN+0x34>
 3a2:	4c c0       	rjmp	.+152    	; 0x43c <DIO_READ_PIN+0xcc>
 3a4:	39 c0       	rjmp	.+114    	; 0x418 <DIO_READ_PIN+0xa8>
	{
		case 'A':
		case 'a':
		val=READ_BIT(PINA,pin_number_0_7);
 3a6:	29 b3       	in	r18, 0x19	; 25
 3a8:	81 e0       	ldi	r24, 0x01	; 1
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	06 2e       	mov	r0, r22
 3ae:	02 c0       	rjmp	.+4      	; 0x3b4 <DIO_READ_PIN+0x44>
 3b0:	88 0f       	add	r24, r24
 3b2:	99 1f       	adc	r25, r25
 3b4:	0a 94       	dec	r0
 3b6:	e2 f7       	brpl	.-8      	; 0x3b0 <DIO_READ_PIN+0x40>
 3b8:	30 e0       	ldi	r19, 0x00	; 0
 3ba:	82 23       	and	r24, r18
 3bc:	93 23       	and	r25, r19
 3be:	02 c0       	rjmp	.+4      	; 0x3c4 <DIO_READ_PIN+0x54>
 3c0:	96 95       	lsr	r25
 3c2:	87 95       	ror	r24
 3c4:	6a 95       	dec	r22
 3c6:	e2 f7       	brpl	.-8      	; 0x3c0 <DIO_READ_PIN+0x50>
 3c8:	98 2f       	mov	r25, r24
		break;
 3ca:	38 c0       	rjmp	.+112    	; 0x43c <DIO_READ_PIN+0xcc>
		case 'B':
		case 'b':
		val=READ_BIT(PINB,pin_number_0_7);
 3cc:	26 b3       	in	r18, 0x16	; 22
 3ce:	81 e0       	ldi	r24, 0x01	; 1
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	06 2e       	mov	r0, r22
 3d4:	02 c0       	rjmp	.+4      	; 0x3da <DIO_READ_PIN+0x6a>
 3d6:	88 0f       	add	r24, r24
 3d8:	99 1f       	adc	r25, r25
 3da:	0a 94       	dec	r0
 3dc:	e2 f7       	brpl	.-8      	; 0x3d6 <DIO_READ_PIN+0x66>
 3de:	30 e0       	ldi	r19, 0x00	; 0
 3e0:	82 23       	and	r24, r18
 3e2:	93 23       	and	r25, r19
 3e4:	02 c0       	rjmp	.+4      	; 0x3ea <DIO_READ_PIN+0x7a>
 3e6:	96 95       	lsr	r25
 3e8:	87 95       	ror	r24
 3ea:	6a 95       	dec	r22
 3ec:	e2 f7       	brpl	.-8      	; 0x3e6 <DIO_READ_PIN+0x76>
 3ee:	98 2f       	mov	r25, r24
		break;
 3f0:	25 c0       	rjmp	.+74     	; 0x43c <DIO_READ_PIN+0xcc>
		case 'C':
		case 'c':
		val=READ_BIT(PINC,pin_number_0_7);
 3f2:	23 b3       	in	r18, 0x13	; 19
 3f4:	81 e0       	ldi	r24, 0x01	; 1
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	06 2e       	mov	r0, r22
 3fa:	02 c0       	rjmp	.+4      	; 0x400 <DIO_READ_PIN+0x90>
 3fc:	88 0f       	add	r24, r24
 3fe:	99 1f       	adc	r25, r25
 400:	0a 94       	dec	r0
 402:	e2 f7       	brpl	.-8      	; 0x3fc <DIO_READ_PIN+0x8c>
 404:	30 e0       	ldi	r19, 0x00	; 0
 406:	82 23       	and	r24, r18
 408:	93 23       	and	r25, r19
 40a:	02 c0       	rjmp	.+4      	; 0x410 <DIO_READ_PIN+0xa0>
 40c:	96 95       	lsr	r25
 40e:	87 95       	ror	r24
 410:	6a 95       	dec	r22
 412:	e2 f7       	brpl	.-8      	; 0x40c <DIO_READ_PIN+0x9c>
 414:	98 2f       	mov	r25, r24
		break;
 416:	12 c0       	rjmp	.+36     	; 0x43c <DIO_READ_PIN+0xcc>
		case 'D':
		case 'd':
		val=READ_BIT(PIND,pin_number_0_7);
 418:	20 b3       	in	r18, 0x10	; 16
 41a:	81 e0       	ldi	r24, 0x01	; 1
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	06 2e       	mov	r0, r22
 420:	02 c0       	rjmp	.+4      	; 0x426 <DIO_READ_PIN+0xb6>
 422:	88 0f       	add	r24, r24
 424:	99 1f       	adc	r25, r25
 426:	0a 94       	dec	r0
 428:	e2 f7       	brpl	.-8      	; 0x422 <DIO_READ_PIN+0xb2>
 42a:	30 e0       	ldi	r19, 0x00	; 0
 42c:	82 23       	and	r24, r18
 42e:	93 23       	and	r25, r19
 430:	02 c0       	rjmp	.+4      	; 0x436 <DIO_READ_PIN+0xc6>
 432:	96 95       	lsr	r25
 434:	87 95       	ror	r24
 436:	6a 95       	dec	r22
 438:	e2 f7       	brpl	.-8      	; 0x432 <DIO_READ_PIN+0xc2>
 43a:	98 2f       	mov	r25, r24
		break;
		default:
		break;	
	}
	return val;
}
 43c:	89 2f       	mov	r24, r25
 43e:	08 95       	ret

00000440 <DIO_set_PORT_dir>:
void DIO_set_PORT_dir (unsigned char portname,unsigned char portvalue)
{
	switch (portname)
 440:	84 34       	cpi	r24, 0x44	; 68
 442:	d9 f0       	breq	.+54     	; 0x47a <DIO_set_PORT_dir+0x3a>
 444:	85 34       	cpi	r24, 0x45	; 69
 446:	38 f4       	brcc	.+14     	; 0x456 <DIO_set_PORT_dir+0x16>
 448:	82 34       	cpi	r24, 0x42	; 66
 44a:	99 f0       	breq	.+38     	; 0x472 <DIO_set_PORT_dir+0x32>
 44c:	83 34       	cpi	r24, 0x43	; 67
 44e:	98 f4       	brcc	.+38     	; 0x476 <DIO_set_PORT_dir+0x36>
 450:	81 34       	cpi	r24, 0x41	; 65
 452:	a1 f4       	brne	.+40     	; 0x47c <DIO_set_PORT_dir+0x3c>
 454:	0c c0       	rjmp	.+24     	; 0x46e <DIO_set_PORT_dir+0x2e>
 456:	82 36       	cpi	r24, 0x62	; 98
 458:	61 f0       	breq	.+24     	; 0x472 <DIO_set_PORT_dir+0x32>
 45a:	83 36       	cpi	r24, 0x63	; 99
 45c:	18 f4       	brcc	.+6      	; 0x464 <DIO_set_PORT_dir+0x24>
 45e:	81 36       	cpi	r24, 0x61	; 97
 460:	69 f4       	brne	.+26     	; 0x47c <DIO_set_PORT_dir+0x3c>
 462:	05 c0       	rjmp	.+10     	; 0x46e <DIO_set_PORT_dir+0x2e>
 464:	83 36       	cpi	r24, 0x63	; 99
 466:	39 f0       	breq	.+14     	; 0x476 <DIO_set_PORT_dir+0x36>
 468:	84 36       	cpi	r24, 0x64	; 100
 46a:	41 f4       	brne	.+16     	; 0x47c <DIO_set_PORT_dir+0x3c>
 46c:	06 c0       	rjmp	.+12     	; 0x47a <DIO_set_PORT_dir+0x3a>
	{
		case 'A':
		case 'a':
		DDRA=portvalue;
 46e:	6a bb       	out	0x1a, r22	; 26
		break;
 470:	08 95       	ret
		case 'B':
		case 'b':
		DDRB=portvalue;
 472:	67 bb       	out	0x17, r22	; 23
		break;
 474:	08 95       	ret
		case 'C':
		case 'c':
		DDRC=portvalue;
 476:	64 bb       	out	0x14, r22	; 20
		break;
 478:	08 95       	ret
		case 'D':
		case 'd':
		DDRD=portvalue;
 47a:	61 bb       	out	0x11, r22	; 17
 47c:	08 95       	ret

0000047e <DIO_output_on_PORT>:
		break;
	}
}
void DIO_output_on_PORT (unsigned char portname,unsigned char output_on_port)
{
	switch (portname)
 47e:	84 34       	cpi	r24, 0x44	; 68
 480:	d9 f0       	breq	.+54     	; 0x4b8 <DIO_output_on_PORT+0x3a>
 482:	85 34       	cpi	r24, 0x45	; 69
 484:	38 f4       	brcc	.+14     	; 0x494 <DIO_output_on_PORT+0x16>
 486:	82 34       	cpi	r24, 0x42	; 66
 488:	99 f0       	breq	.+38     	; 0x4b0 <DIO_output_on_PORT+0x32>
 48a:	83 34       	cpi	r24, 0x43	; 67
 48c:	98 f4       	brcc	.+38     	; 0x4b4 <DIO_output_on_PORT+0x36>
 48e:	81 34       	cpi	r24, 0x41	; 65
 490:	a1 f4       	brne	.+40     	; 0x4ba <DIO_output_on_PORT+0x3c>
 492:	0c c0       	rjmp	.+24     	; 0x4ac <DIO_output_on_PORT+0x2e>
 494:	82 36       	cpi	r24, 0x62	; 98
 496:	61 f0       	breq	.+24     	; 0x4b0 <DIO_output_on_PORT+0x32>
 498:	83 36       	cpi	r24, 0x63	; 99
 49a:	18 f4       	brcc	.+6      	; 0x4a2 <DIO_output_on_PORT+0x24>
 49c:	81 36       	cpi	r24, 0x61	; 97
 49e:	69 f4       	brne	.+26     	; 0x4ba <DIO_output_on_PORT+0x3c>
 4a0:	05 c0       	rjmp	.+10     	; 0x4ac <DIO_output_on_PORT+0x2e>
 4a2:	83 36       	cpi	r24, 0x63	; 99
 4a4:	39 f0       	breq	.+14     	; 0x4b4 <DIO_output_on_PORT+0x36>
 4a6:	84 36       	cpi	r24, 0x64	; 100
 4a8:	41 f4       	brne	.+16     	; 0x4ba <DIO_output_on_PORT+0x3c>
 4aa:	06 c0       	rjmp	.+12     	; 0x4b8 <DIO_output_on_PORT+0x3a>
	{
		case 'A':
		case 'a':
		PORTA=output_on_port;
 4ac:	6b bb       	out	0x1b, r22	; 27
		break;
 4ae:	08 95       	ret
		case 'B':
		case 'b':
		PORTB=output_on_port;
 4b0:	68 bb       	out	0x18, r22	; 24
		break;
 4b2:	08 95       	ret
		case 'C':
		case 'c':
		PORTC=output_on_port;
 4b4:	65 bb       	out	0x15, r22	; 21
		break;
 4b6:	08 95       	ret
		case 'D':
		case 'd':
		PORTD=output_on_port;
 4b8:	62 bb       	out	0x12, r22	; 18
 4ba:	08 95       	ret

000004bc <DIO_Toggle_PORT>:
		break;
	}
}
void DIO_Toggle_PORT (unsigned char portname)
{
	switch (portname)
 4bc:	84 34       	cpi	r24, 0x44	; 68
 4be:	09 f1       	breq	.+66     	; 0x502 <DIO_Toggle_PORT+0x46>
 4c0:	85 34       	cpi	r24, 0x45	; 69
 4c2:	38 f4       	brcc	.+14     	; 0x4d2 <DIO_Toggle_PORT+0x16>
 4c4:	82 34       	cpi	r24, 0x42	; 66
 4c6:	a9 f0       	breq	.+42     	; 0x4f2 <DIO_Toggle_PORT+0x36>
 4c8:	83 34       	cpi	r24, 0x43	; 67
 4ca:	b8 f4       	brcc	.+46     	; 0x4fa <DIO_Toggle_PORT+0x3e>
 4cc:	81 34       	cpi	r24, 0x41	; 65
 4ce:	e1 f4       	brne	.+56     	; 0x508 <DIO_Toggle_PORT+0x4c>
 4d0:	0c c0       	rjmp	.+24     	; 0x4ea <DIO_Toggle_PORT+0x2e>
 4d2:	82 36       	cpi	r24, 0x62	; 98
 4d4:	71 f0       	breq	.+28     	; 0x4f2 <DIO_Toggle_PORT+0x36>
 4d6:	83 36       	cpi	r24, 0x63	; 99
 4d8:	18 f4       	brcc	.+6      	; 0x4e0 <DIO_Toggle_PORT+0x24>
 4da:	81 36       	cpi	r24, 0x61	; 97
 4dc:	a9 f4       	brne	.+42     	; 0x508 <DIO_Toggle_PORT+0x4c>
 4de:	05 c0       	rjmp	.+10     	; 0x4ea <DIO_Toggle_PORT+0x2e>
 4e0:	83 36       	cpi	r24, 0x63	; 99
 4e2:	59 f0       	breq	.+22     	; 0x4fa <DIO_Toggle_PORT+0x3e>
 4e4:	84 36       	cpi	r24, 0x64	; 100
 4e6:	81 f4       	brne	.+32     	; 0x508 <DIO_Toggle_PORT+0x4c>
 4e8:	0c c0       	rjmp	.+24     	; 0x502 <DIO_Toggle_PORT+0x46>
	{
		case 'A':
		case 'a':
		PORTA=~PORTA;
 4ea:	8b b3       	in	r24, 0x1b	; 27
 4ec:	80 95       	com	r24
 4ee:	8b bb       	out	0x1b, r24	; 27
		break;
 4f0:	08 95       	ret
		case 'B':
		case 'b':
		PORTB=~PORTB;
 4f2:	88 b3       	in	r24, 0x18	; 24
 4f4:	80 95       	com	r24
 4f6:	88 bb       	out	0x18, r24	; 24
		break;
 4f8:	08 95       	ret
		case 'C':
		case 'c':
		PORTC=~PORTC;
 4fa:	85 b3       	in	r24, 0x15	; 21
 4fc:	80 95       	com	r24
 4fe:	85 bb       	out	0x15, r24	; 21
		break;
 500:	08 95       	ret
		case 'D':
		case 'd':
		PORTD=~PORTD;
 502:	82 b3       	in	r24, 0x12	; 18
 504:	80 95       	com	r24
 506:	82 bb       	out	0x12, r24	; 18
 508:	08 95       	ret

0000050a <DIO_READ_PORT>:
	}
}
unsigned char DIO_READ_PORT (unsigned char portname)
{
	unsigned char returned_value;
	switch (portname)
 50a:	84 34       	cpi	r24, 0x44	; 68
 50c:	d9 f0       	breq	.+54     	; 0x544 <DIO_READ_PORT+0x3a>
 50e:	85 34       	cpi	r24, 0x45	; 69
 510:	38 f4       	brcc	.+14     	; 0x520 <DIO_READ_PORT+0x16>
 512:	82 34       	cpi	r24, 0x42	; 66
 514:	99 f0       	breq	.+38     	; 0x53c <DIO_READ_PORT+0x32>
 516:	83 34       	cpi	r24, 0x43	; 67
 518:	98 f4       	brcc	.+38     	; 0x540 <DIO_READ_PORT+0x36>
 51a:	81 34       	cpi	r24, 0x41	; 65
 51c:	a1 f4       	brne	.+40     	; 0x546 <DIO_READ_PORT+0x3c>
 51e:	0c c0       	rjmp	.+24     	; 0x538 <DIO_READ_PORT+0x2e>
 520:	82 36       	cpi	r24, 0x62	; 98
 522:	61 f0       	breq	.+24     	; 0x53c <DIO_READ_PORT+0x32>
 524:	83 36       	cpi	r24, 0x63	; 99
 526:	18 f4       	brcc	.+6      	; 0x52e <DIO_READ_PORT+0x24>
 528:	81 36       	cpi	r24, 0x61	; 97
 52a:	69 f4       	brne	.+26     	; 0x546 <DIO_READ_PORT+0x3c>
 52c:	05 c0       	rjmp	.+10     	; 0x538 <DIO_READ_PORT+0x2e>
 52e:	83 36       	cpi	r24, 0x63	; 99
 530:	39 f0       	breq	.+14     	; 0x540 <DIO_READ_PORT+0x36>
 532:	84 36       	cpi	r24, 0x64	; 100
 534:	41 f4       	brne	.+16     	; 0x546 <DIO_READ_PORT+0x3c>
 536:	06 c0       	rjmp	.+12     	; 0x544 <DIO_READ_PORT+0x3a>
	{
		case 'A':
		case 'a':
		returned_value=PORTA;
 538:	8b b3       	in	r24, 0x1b	; 27
		break;
 53a:	08 95       	ret
		case 'B':
		case 'b':
		returned_value=PORTB;
 53c:	88 b3       	in	r24, 0x18	; 24
		break;
 53e:	08 95       	ret
		case 'C':
		case 'c':
		returned_value=PORTC;
 540:	85 b3       	in	r24, 0x15	; 21
		break;
 542:	08 95       	ret
		case 'D':
		case 'd':
		returned_value=PORTD;
 544:	82 b3       	in	r24, 0x12	; 18
		break;
		default:
		break;
	}
}
 546:	08 95       	ret

00000548 <DIO_enable_PULLUP>:
void DIO_enable_PULLUP (unsigned char portname,unsigned char pin_number_0_7,unsigned char enable_pullup)
{
	switch (portname)
 548:	84 34       	cpi	r24, 0x44	; 68
 54a:	09 f4       	brne	.+2      	; 0x54e <DIO_enable_PULLUP+0x6>
 54c:	71 c0       	rjmp	.+226    	; 0x630 <DIO_enable_PULLUP+0xe8>
 54e:	85 34       	cpi	r24, 0x45	; 69
 550:	48 f4       	brcc	.+18     	; 0x564 <DIO_enable_PULLUP+0x1c>
 552:	82 34       	cpi	r24, 0x42	; 66
 554:	99 f1       	breq	.+102    	; 0x5bc <DIO_enable_PULLUP+0x74>
 556:	83 34       	cpi	r24, 0x43	; 67
 558:	08 f0       	brcs	.+2      	; 0x55c <DIO_enable_PULLUP+0x14>
 55a:	4d c0       	rjmp	.+154    	; 0x5f6 <DIO_enable_PULLUP+0xae>
 55c:	81 34       	cpi	r24, 0x41	; 65
 55e:	09 f0       	breq	.+2      	; 0x562 <DIO_enable_PULLUP+0x1a>
 560:	83 c0       	rjmp	.+262    	; 0x668 <DIO_enable_PULLUP+0x120>
 562:	0f c0       	rjmp	.+30     	; 0x582 <DIO_enable_PULLUP+0x3a>
 564:	82 36       	cpi	r24, 0x62	; 98
 566:	51 f1       	breq	.+84     	; 0x5bc <DIO_enable_PULLUP+0x74>
 568:	83 36       	cpi	r24, 0x63	; 99
 56a:	20 f4       	brcc	.+8      	; 0x574 <DIO_enable_PULLUP+0x2c>
 56c:	81 36       	cpi	r24, 0x61	; 97
 56e:	09 f0       	breq	.+2      	; 0x572 <DIO_enable_PULLUP+0x2a>
 570:	7b c0       	rjmp	.+246    	; 0x668 <DIO_enable_PULLUP+0x120>
 572:	07 c0       	rjmp	.+14     	; 0x582 <DIO_enable_PULLUP+0x3a>
 574:	83 36       	cpi	r24, 0x63	; 99
 576:	09 f4       	brne	.+2      	; 0x57a <DIO_enable_PULLUP+0x32>
 578:	3e c0       	rjmp	.+124    	; 0x5f6 <DIO_enable_PULLUP+0xae>
 57a:	84 36       	cpi	r24, 0x64	; 100
 57c:	09 f0       	breq	.+2      	; 0x580 <DIO_enable_PULLUP+0x38>
 57e:	74 c0       	rjmp	.+232    	; 0x668 <DIO_enable_PULLUP+0x120>
 580:	57 c0       	rjmp	.+174    	; 0x630 <DIO_enable_PULLUP+0xe8>
	{
		case 'A':
		case 'a':
		if (enable_pullup==1)
 582:	41 30       	cpi	r20, 0x01	; 1
 584:	69 f4       	brne	.+26     	; 0x5a0 <DIO_enable_PULLUP+0x58>
		{
			SET_BIT(PORTA,pin_number_0_7);
 586:	2b b3       	in	r18, 0x1b	; 27
 588:	81 e0       	ldi	r24, 0x01	; 1
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	ac 01       	movw	r20, r24
 58e:	02 c0       	rjmp	.+4      	; 0x594 <DIO_enable_PULLUP+0x4c>
 590:	44 0f       	add	r20, r20
 592:	55 1f       	adc	r21, r21
 594:	6a 95       	dec	r22
 596:	e2 f7       	brpl	.-8      	; 0x590 <DIO_enable_PULLUP+0x48>
 598:	ba 01       	movw	r22, r20
 59a:	62 2b       	or	r22, r18
 59c:	6b bb       	out	0x1b, r22	; 27
 59e:	08 95       	ret
		}
		else
		{
			CLEAR_BIT(PORTA,pin_number_0_7);
 5a0:	2b b3       	in	r18, 0x1b	; 27
 5a2:	81 e0       	ldi	r24, 0x01	; 1
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	ac 01       	movw	r20, r24
 5a8:	02 c0       	rjmp	.+4      	; 0x5ae <DIO_enable_PULLUP+0x66>
 5aa:	44 0f       	add	r20, r20
 5ac:	55 1f       	adc	r21, r21
 5ae:	6a 95       	dec	r22
 5b0:	e2 f7       	brpl	.-8      	; 0x5aa <DIO_enable_PULLUP+0x62>
 5b2:	ba 01       	movw	r22, r20
 5b4:	60 95       	com	r22
 5b6:	62 23       	and	r22, r18
 5b8:	6b bb       	out	0x1b, r22	; 27
 5ba:	08 95       	ret
		}
		break;
		case 'B':
		case 'b':
		if (enable_pullup==1)
 5bc:	41 30       	cpi	r20, 0x01	; 1
 5be:	69 f4       	brne	.+26     	; 0x5da <DIO_enable_PULLUP+0x92>
		{
			SET_BIT(PORTB,pin_number_0_7);
 5c0:	28 b3       	in	r18, 0x18	; 24
 5c2:	81 e0       	ldi	r24, 0x01	; 1
 5c4:	90 e0       	ldi	r25, 0x00	; 0
 5c6:	ac 01       	movw	r20, r24
 5c8:	02 c0       	rjmp	.+4      	; 0x5ce <DIO_enable_PULLUP+0x86>
 5ca:	44 0f       	add	r20, r20
 5cc:	55 1f       	adc	r21, r21
 5ce:	6a 95       	dec	r22
 5d0:	e2 f7       	brpl	.-8      	; 0x5ca <DIO_enable_PULLUP+0x82>
 5d2:	ba 01       	movw	r22, r20
 5d4:	62 2b       	or	r22, r18
 5d6:	68 bb       	out	0x18, r22	; 24
 5d8:	08 95       	ret
		}
		else
		{
			CLEAR_BIT(PORTB,pin_number_0_7);
 5da:	28 b3       	in	r18, 0x18	; 24
 5dc:	81 e0       	ldi	r24, 0x01	; 1
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	ac 01       	movw	r20, r24
 5e2:	02 c0       	rjmp	.+4      	; 0x5e8 <DIO_enable_PULLUP+0xa0>
 5e4:	44 0f       	add	r20, r20
 5e6:	55 1f       	adc	r21, r21
 5e8:	6a 95       	dec	r22
 5ea:	e2 f7       	brpl	.-8      	; 0x5e4 <DIO_enable_PULLUP+0x9c>
 5ec:	ba 01       	movw	r22, r20
 5ee:	60 95       	com	r22
 5f0:	62 23       	and	r22, r18
 5f2:	68 bb       	out	0x18, r22	; 24
 5f4:	08 95       	ret
		}
		break;
		case 'C':
		case 'c':
		if (enable_pullup==1)
 5f6:	41 30       	cpi	r20, 0x01	; 1
 5f8:	69 f4       	brne	.+26     	; 0x614 <DIO_enable_PULLUP+0xcc>
		{
			SET_BIT(PORTC,pin_number_0_7);
 5fa:	25 b3       	in	r18, 0x15	; 21
 5fc:	81 e0       	ldi	r24, 0x01	; 1
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	ac 01       	movw	r20, r24
 602:	02 c0       	rjmp	.+4      	; 0x608 <DIO_enable_PULLUP+0xc0>
 604:	44 0f       	add	r20, r20
 606:	55 1f       	adc	r21, r21
 608:	6a 95       	dec	r22
 60a:	e2 f7       	brpl	.-8      	; 0x604 <DIO_enable_PULLUP+0xbc>
 60c:	ba 01       	movw	r22, r20
 60e:	62 2b       	or	r22, r18
 610:	65 bb       	out	0x15, r22	; 21
 612:	08 95       	ret
		}
		else
		{
			CLEAR_BIT(PORTC,pin_number_0_7);
 614:	25 b3       	in	r18, 0x15	; 21
 616:	81 e0       	ldi	r24, 0x01	; 1
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	ac 01       	movw	r20, r24
 61c:	02 c0       	rjmp	.+4      	; 0x622 <DIO_enable_PULLUP+0xda>
 61e:	44 0f       	add	r20, r20
 620:	55 1f       	adc	r21, r21
 622:	6a 95       	dec	r22
 624:	e2 f7       	brpl	.-8      	; 0x61e <DIO_enable_PULLUP+0xd6>
 626:	ba 01       	movw	r22, r20
 628:	60 95       	com	r22
 62a:	62 23       	and	r22, r18
 62c:	65 bb       	out	0x15, r22	; 21
 62e:	08 95       	ret
		}
		break;
		case 'D':
		case 'd':
		if (enable_pullup==1)
 630:	41 30       	cpi	r20, 0x01	; 1
 632:	69 f4       	brne	.+26     	; 0x64e <DIO_enable_PULLUP+0x106>
		{
			SET_BIT(PORTD,pin_number_0_7);
 634:	22 b3       	in	r18, 0x12	; 18
 636:	81 e0       	ldi	r24, 0x01	; 1
 638:	90 e0       	ldi	r25, 0x00	; 0
 63a:	ac 01       	movw	r20, r24
 63c:	02 c0       	rjmp	.+4      	; 0x642 <DIO_enable_PULLUP+0xfa>
 63e:	44 0f       	add	r20, r20
 640:	55 1f       	adc	r21, r21
 642:	6a 95       	dec	r22
 644:	e2 f7       	brpl	.-8      	; 0x63e <DIO_enable_PULLUP+0xf6>
 646:	ba 01       	movw	r22, r20
 648:	62 2b       	or	r22, r18
 64a:	62 bb       	out	0x12, r22	; 18
 64c:	08 95       	ret
		}
		else
		{
			CLEAR_BIT(PORTD,pin_number_0_7);
 64e:	22 b3       	in	r18, 0x12	; 18
 650:	81 e0       	ldi	r24, 0x01	; 1
 652:	90 e0       	ldi	r25, 0x00	; 0
 654:	ac 01       	movw	r20, r24
 656:	02 c0       	rjmp	.+4      	; 0x65c <DIO_enable_PULLUP+0x114>
 658:	44 0f       	add	r20, r20
 65a:	55 1f       	adc	r21, r21
 65c:	6a 95       	dec	r22
 65e:	e2 f7       	brpl	.-8      	; 0x658 <DIO_enable_PULLUP+0x110>
 660:	ba 01       	movw	r22, r20
 662:	60 95       	com	r22
 664:	62 23       	and	r22, r18
 666:	62 bb       	out	0x12, r22	; 18
 668:	08 95       	ret

0000066a <main>:

int main(void)
{
    while(1)
    {
        timer1_INIT_WAVE_Fast_PMW(15);
 66a:	60 e0       	ldi	r22, 0x00	; 0
 66c:	70 e0       	ldi	r23, 0x00	; 0
 66e:	80 e7       	ldi	r24, 0x70	; 112
 670:	91 e4       	ldi	r25, 0x41	; 65
 672:	0e 94 80 03 	call	0x700	; 0x700 <timer1_INIT_WAVE_Fast_PMW>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 676:	8f ef       	ldi	r24, 0xFF	; 255
 678:	99 e6       	ldi	r25, 0x69	; 105
 67a:	a8 e1       	ldi	r26, 0x18	; 24
 67c:	81 50       	subi	r24, 0x01	; 1
 67e:	90 40       	sbci	r25, 0x00	; 0
 680:	a0 40       	sbci	r26, 0x00	; 0
 682:	e1 f7       	brne	.-8      	; 0x67c <main+0x12>
 684:	00 c0       	rjmp	.+0      	; 0x686 <main+0x1c>
 686:	00 00       	nop
		_delay_ms(1000);
		
		timer1_INIT_WAVE_Fast_PMW(-12);
 688:	60 e0       	ldi	r22, 0x00	; 0
 68a:	70 e0       	ldi	r23, 0x00	; 0
 68c:	80 e4       	ldi	r24, 0x40	; 64
 68e:	91 ec       	ldi	r25, 0xC1	; 193
 690:	0e 94 80 03 	call	0x700	; 0x700 <timer1_INIT_WAVE_Fast_PMW>
 694:	8f ef       	ldi	r24, 0xFF	; 255
 696:	99 e6       	ldi	r25, 0x69	; 105
 698:	a8 e1       	ldi	r26, 0x18	; 24
 69a:	81 50       	subi	r24, 0x01	; 1
 69c:	90 40       	sbci	r25, 0x00	; 0
 69e:	a0 40       	sbci	r26, 0x00	; 0
 6a0:	e1 f7       	brne	.-8      	; 0x69a <main+0x30>
 6a2:	00 c0       	rjmp	.+0      	; 0x6a4 <main+0x3a>
 6a4:	00 00       	nop
		_delay_ms(1000);
		
		timer1_INIT_WAVE_Fast_PMW(80);
 6a6:	60 e0       	ldi	r22, 0x00	; 0
 6a8:	70 e0       	ldi	r23, 0x00	; 0
 6aa:	80 ea       	ldi	r24, 0xA0	; 160
 6ac:	92 e4       	ldi	r25, 0x42	; 66
 6ae:	0e 94 80 03 	call	0x700	; 0x700 <timer1_INIT_WAVE_Fast_PMW>
 6b2:	8f ef       	ldi	r24, 0xFF	; 255
 6b4:	99 e6       	ldi	r25, 0x69	; 105
 6b6:	a8 e1       	ldi	r26, 0x18	; 24
 6b8:	81 50       	subi	r24, 0x01	; 1
 6ba:	90 40       	sbci	r25, 0x00	; 0
 6bc:	a0 40       	sbci	r26, 0x00	; 0
 6be:	e1 f7       	brne	.-8      	; 0x6b8 <main+0x4e>
 6c0:	00 c0       	rjmp	.+0      	; 0x6c2 <main+0x58>
 6c2:	00 00       	nop
		_delay_ms(1000);
		
		timer1_INIT_WAVE_Fast_PMW(-70);
 6c4:	60 e0       	ldi	r22, 0x00	; 0
 6c6:	70 e0       	ldi	r23, 0x00	; 0
 6c8:	8c e8       	ldi	r24, 0x8C	; 140
 6ca:	92 ec       	ldi	r25, 0xC2	; 194
 6cc:	0e 94 80 03 	call	0x700	; 0x700 <timer1_INIT_WAVE_Fast_PMW>
 6d0:	8f ef       	ldi	r24, 0xFF	; 255
 6d2:	99 e6       	ldi	r25, 0x69	; 105
 6d4:	a8 e1       	ldi	r26, 0x18	; 24
 6d6:	81 50       	subi	r24, 0x01	; 1
 6d8:	90 40       	sbci	r25, 0x00	; 0
 6da:	a0 40       	sbci	r26, 0x00	; 0
 6dc:	e1 f7       	brne	.-8      	; 0x6d6 <main+0x6c>
 6de:	00 c0       	rjmp	.+0      	; 0x6e0 <main+0x76>
 6e0:	00 00       	nop
 6e2:	c3 cf       	rjmp	.-122    	; 0x66a <main>

000006e4 <timer2_INIT_OVERFLOW_Interrupt>:
#include <avr/interrupt.h>
#include <avr/io.h>

void timer2_INIT_OVERFLOW_Interrupt (void)
{
	SET_BIT(ASSR,AS2);//choose the oscillation source [0 for internal / 1 for TOSC2]
 6e4:	82 b5       	in	r24, 0x22	; 34
 6e6:	88 60       	ori	r24, 0x08	; 8
 6e8:	82 bd       	out	0x22, r24	; 34
	
	SET_BIT(TCCR2,CS20);//choose the prescaler factor from table
 6ea:	85 b5       	in	r24, 0x25	; 37
 6ec:	81 60       	ori	r24, 0x01	; 1
 6ee:	85 bd       	out	0x25, r24	; 37
	SET_BIT(TCCR2,CS22);
 6f0:	85 b5       	in	r24, 0x25	; 37
 6f2:	84 60       	ori	r24, 0x04	; 4
 6f4:	85 bd       	out	0x25, r24	; 37
	
	//enable interrupt
	sei();
 6f6:	78 94       	sei
	SET_BIT(TIMSK,TOIE2);//for overflow interrupt
 6f8:	89 b7       	in	r24, 0x39	; 57
 6fa:	80 64       	ori	r24, 0x40	; 64
 6fc:	89 bf       	out	0x39, r24	; 57
}
 6fe:	08 95       	ret

00000700 <timer1_INIT_WAVE_Fast_PMW>:
void timer1_INIT_WAVE_Fast_PMW (double value)
{
	value=value*0.0055555555555556+1.5;
 700:	21 e6       	ldi	r18, 0x61	; 97
 702:	3b e0       	ldi	r19, 0x0B	; 11
 704:	46 eb       	ldi	r20, 0xB6	; 182
 706:	5b e3       	ldi	r21, 0x3B	; 59
 708:	0e 94 98 04 	call	0x930	; 0x930 <__mulsf3>
	SET_BIT(DDRD,5);//set bin d5 to be output bin
 70c:	8d 9a       	sbi	0x11, 5	; 17
	CLEAR_BIT(TCCR1A,WGM10);//select fast PWM mode with ICR1 as top
 70e:	2f b5       	in	r18, 0x2f	; 47
 710:	2e 7f       	andi	r18, 0xFE	; 254
 712:	2f bd       	out	0x2f, r18	; 47
	SET_BIT(TCCR1A,WGM11);
 714:	2f b5       	in	r18, 0x2f	; 47
 716:	22 60       	ori	r18, 0x02	; 2
 718:	2f bd       	out	0x2f, r18	; 47
	SET_BIT(TCCR1B,WGM12);
 71a:	2e b5       	in	r18, 0x2e	; 46
 71c:	28 60       	ori	r18, 0x08	; 8
 71e:	2e bd       	out	0x2e, r18	; 46
	SET_BIT(TCCR1B,WGM13);
 720:	2e b5       	in	r18, 0x2e	; 46
 722:	20 61       	ori	r18, 0x10	; 16
 724:	2e bd       	out	0x2e, r18	; 46
	sei();
	SET_BIT(TIMSK,TOIE2);//for overflow interrupt
}
void timer1_INIT_WAVE_Fast_PMW (double value)
{
	value=value*0.0055555555555556+1.5;
 726:	46 2f       	mov	r20, r22
 728:	57 2f       	mov	r21, r23
 72a:	68 2f       	mov	r22, r24
 72c:	79 2f       	mov	r23, r25
 72e:	cb 01       	movw	r24, r22
 730:	ba 01       	movw	r22, r20
 732:	20 e0       	ldi	r18, 0x00	; 0
 734:	30 e0       	ldi	r19, 0x00	; 0
 736:	40 ec       	ldi	r20, 0xC0	; 192
 738:	5f e3       	ldi	r21, 0x3F	; 63
 73a:	0e 94 b7 03 	call	0x76e	; 0x76e <__addsf3>
	SET_BIT(DDRD,5);//set bin d5 to be output bin
	CLEAR_BIT(TCCR1A,WGM10);//select fast PWM mode with ICR1 as top
	SET_BIT(TCCR1A,WGM11);
	SET_BIT(TCCR1B,WGM12);
	SET_BIT(TCCR1B,WGM13);
	OCR1A=value*1000;//load the OCR1A,ICR1 values
 73e:	20 e0       	ldi	r18, 0x00	; 0
 740:	30 e0       	ldi	r19, 0x00	; 0
 742:	4a e7       	ldi	r20, 0x7A	; 122
 744:	54 e4       	ldi	r21, 0x44	; 68
 746:	0e 94 98 04 	call	0x930	; 0x930 <__mulsf3>
 74a:	0e 94 1b 04 	call	0x836	; 0x836 <__fixunssfsi>
 74e:	dc 01       	movw	r26, r24
 750:	cb 01       	movw	r24, r22
 752:	9b bd       	out	0x2b, r25	; 43
 754:	8a bd       	out	0x2a, r24	; 42
	ICR1=19999;
 756:	8f e1       	ldi	r24, 0x1F	; 31
 758:	9e e4       	ldi	r25, 0x4E	; 78
 75a:	97 bd       	out	0x27, r25	; 39
 75c:	86 bd       	out	0x26, r24	; 38
	SET_BIT(TCCR1B,CS11);//no prescaling
 75e:	8e b5       	in	r24, 0x2e	; 46
 760:	82 60       	ori	r24, 0x02	; 2
 762:	8e bd       	out	0x2e, r24	; 46
	SET_BIT(TCCR1A,COM1A1);
 764:	8f b5       	in	r24, 0x2f	; 47
 766:	80 68       	ori	r24, 0x80	; 128
 768:	8f bd       	out	0x2f, r24	; 47
 76a:	08 95       	ret

0000076c <__subsf3>:
 76c:	50 58       	subi	r21, 0x80	; 128

0000076e <__addsf3>:
 76e:	bb 27       	eor	r27, r27
 770:	aa 27       	eor	r26, r26
 772:	0e d0       	rcall	.+28     	; 0x790 <__addsf3x>
 774:	a3 c0       	rjmp	.+326    	; 0x8bc <__fp_round>
 776:	94 d0       	rcall	.+296    	; 0x8a0 <__fp_pscA>
 778:	30 f0       	brcs	.+12     	; 0x786 <__addsf3+0x18>
 77a:	99 d0       	rcall	.+306    	; 0x8ae <__fp_pscB>
 77c:	20 f0       	brcs	.+8      	; 0x786 <__addsf3+0x18>
 77e:	31 f4       	brne	.+12     	; 0x78c <__addsf3+0x1e>
 780:	9f 3f       	cpi	r25, 0xFF	; 255
 782:	11 f4       	brne	.+4      	; 0x788 <__addsf3+0x1a>
 784:	1e f4       	brtc	.+6      	; 0x78c <__addsf3+0x1e>
 786:	89 c0       	rjmp	.+274    	; 0x89a <__fp_nan>
 788:	0e f4       	brtc	.+2      	; 0x78c <__addsf3+0x1e>
 78a:	e0 95       	com	r30
 78c:	e7 fb       	bst	r30, 7
 78e:	7f c0       	rjmp	.+254    	; 0x88e <__fp_inf>

00000790 <__addsf3x>:
 790:	e9 2f       	mov	r30, r25
 792:	a5 d0       	rcall	.+330    	; 0x8de <__fp_split3>
 794:	80 f3       	brcs	.-32     	; 0x776 <__addsf3+0x8>
 796:	ba 17       	cp	r27, r26
 798:	62 07       	cpc	r22, r18
 79a:	73 07       	cpc	r23, r19
 79c:	84 07       	cpc	r24, r20
 79e:	95 07       	cpc	r25, r21
 7a0:	18 f0       	brcs	.+6      	; 0x7a8 <__addsf3x+0x18>
 7a2:	71 f4       	brne	.+28     	; 0x7c0 <__addsf3x+0x30>
 7a4:	9e f5       	brtc	.+102    	; 0x80c <__addsf3x+0x7c>
 7a6:	bd c0       	rjmp	.+378    	; 0x922 <__fp_zero>
 7a8:	0e f4       	brtc	.+2      	; 0x7ac <__addsf3x+0x1c>
 7aa:	e0 95       	com	r30
 7ac:	0b 2e       	mov	r0, r27
 7ae:	ba 2f       	mov	r27, r26
 7b0:	a0 2d       	mov	r26, r0
 7b2:	0b 01       	movw	r0, r22
 7b4:	b9 01       	movw	r22, r18
 7b6:	90 01       	movw	r18, r0
 7b8:	0c 01       	movw	r0, r24
 7ba:	ca 01       	movw	r24, r20
 7bc:	a0 01       	movw	r20, r0
 7be:	11 24       	eor	r1, r1
 7c0:	ff 27       	eor	r31, r31
 7c2:	59 1b       	sub	r21, r25
 7c4:	99 f0       	breq	.+38     	; 0x7ec <__addsf3x+0x5c>
 7c6:	59 3f       	cpi	r21, 0xF9	; 249
 7c8:	50 f4       	brcc	.+20     	; 0x7de <__addsf3x+0x4e>
 7ca:	50 3e       	cpi	r21, 0xE0	; 224
 7cc:	68 f1       	brcs	.+90     	; 0x828 <__addsf3x+0x98>
 7ce:	1a 16       	cp	r1, r26
 7d0:	f0 40       	sbci	r31, 0x00	; 0
 7d2:	a2 2f       	mov	r26, r18
 7d4:	23 2f       	mov	r18, r19
 7d6:	34 2f       	mov	r19, r20
 7d8:	44 27       	eor	r20, r20
 7da:	58 5f       	subi	r21, 0xF8	; 248
 7dc:	f3 cf       	rjmp	.-26     	; 0x7c4 <__addsf3x+0x34>
 7de:	46 95       	lsr	r20
 7e0:	37 95       	ror	r19
 7e2:	27 95       	ror	r18
 7e4:	a7 95       	ror	r26
 7e6:	f0 40       	sbci	r31, 0x00	; 0
 7e8:	53 95       	inc	r21
 7ea:	c9 f7       	brne	.-14     	; 0x7de <__addsf3x+0x4e>
 7ec:	7e f4       	brtc	.+30     	; 0x80c <__addsf3x+0x7c>
 7ee:	1f 16       	cp	r1, r31
 7f0:	ba 0b       	sbc	r27, r26
 7f2:	62 0b       	sbc	r22, r18
 7f4:	73 0b       	sbc	r23, r19
 7f6:	84 0b       	sbc	r24, r20
 7f8:	ba f0       	brmi	.+46     	; 0x828 <__addsf3x+0x98>
 7fa:	91 50       	subi	r25, 0x01	; 1
 7fc:	a1 f0       	breq	.+40     	; 0x826 <__addsf3x+0x96>
 7fe:	ff 0f       	add	r31, r31
 800:	bb 1f       	adc	r27, r27
 802:	66 1f       	adc	r22, r22
 804:	77 1f       	adc	r23, r23
 806:	88 1f       	adc	r24, r24
 808:	c2 f7       	brpl	.-16     	; 0x7fa <__addsf3x+0x6a>
 80a:	0e c0       	rjmp	.+28     	; 0x828 <__addsf3x+0x98>
 80c:	ba 0f       	add	r27, r26
 80e:	62 1f       	adc	r22, r18
 810:	73 1f       	adc	r23, r19
 812:	84 1f       	adc	r24, r20
 814:	48 f4       	brcc	.+18     	; 0x828 <__addsf3x+0x98>
 816:	87 95       	ror	r24
 818:	77 95       	ror	r23
 81a:	67 95       	ror	r22
 81c:	b7 95       	ror	r27
 81e:	f7 95       	ror	r31
 820:	9e 3f       	cpi	r25, 0xFE	; 254
 822:	08 f0       	brcs	.+2      	; 0x826 <__addsf3x+0x96>
 824:	b3 cf       	rjmp	.-154    	; 0x78c <__addsf3+0x1e>
 826:	93 95       	inc	r25
 828:	88 0f       	add	r24, r24
 82a:	08 f0       	brcs	.+2      	; 0x82e <__addsf3x+0x9e>
 82c:	99 27       	eor	r25, r25
 82e:	ee 0f       	add	r30, r30
 830:	97 95       	ror	r25
 832:	87 95       	ror	r24
 834:	08 95       	ret

00000836 <__fixunssfsi>:
 836:	5b d0       	rcall	.+182    	; 0x8ee <__fp_splitA>
 838:	88 f0       	brcs	.+34     	; 0x85c <__fixunssfsi+0x26>
 83a:	9f 57       	subi	r25, 0x7F	; 127
 83c:	90 f0       	brcs	.+36     	; 0x862 <__stack+0x3>
 83e:	b9 2f       	mov	r27, r25
 840:	99 27       	eor	r25, r25
 842:	b7 51       	subi	r27, 0x17	; 23
 844:	a0 f0       	brcs	.+40     	; 0x86e <__stack+0xf>
 846:	d1 f0       	breq	.+52     	; 0x87c <__stack+0x1d>
 848:	66 0f       	add	r22, r22
 84a:	77 1f       	adc	r23, r23
 84c:	88 1f       	adc	r24, r24
 84e:	99 1f       	adc	r25, r25
 850:	1a f0       	brmi	.+6      	; 0x858 <__fixunssfsi+0x22>
 852:	ba 95       	dec	r27
 854:	c9 f7       	brne	.-14     	; 0x848 <__fixunssfsi+0x12>
 856:	12 c0       	rjmp	.+36     	; 0x87c <__stack+0x1d>
 858:	b1 30       	cpi	r27, 0x01	; 1
 85a:	81 f0       	breq	.+32     	; 0x87c <__stack+0x1d>
 85c:	62 d0       	rcall	.+196    	; 0x922 <__fp_zero>
 85e:	b1 e0       	ldi	r27, 0x01	; 1
 860:	08 95       	ret
 862:	5f c0       	rjmp	.+190    	; 0x922 <__fp_zero>
 864:	67 2f       	mov	r22, r23
 866:	78 2f       	mov	r23, r24
 868:	88 27       	eor	r24, r24
 86a:	b8 5f       	subi	r27, 0xF8	; 248
 86c:	39 f0       	breq	.+14     	; 0x87c <__stack+0x1d>
 86e:	b9 3f       	cpi	r27, 0xF9	; 249
 870:	cc f3       	brlt	.-14     	; 0x864 <__stack+0x5>
 872:	86 95       	lsr	r24
 874:	77 95       	ror	r23
 876:	67 95       	ror	r22
 878:	b3 95       	inc	r27
 87a:	d9 f7       	brne	.-10     	; 0x872 <__stack+0x13>
 87c:	3e f4       	brtc	.+14     	; 0x88c <__stack+0x2d>
 87e:	90 95       	com	r25
 880:	80 95       	com	r24
 882:	70 95       	com	r23
 884:	61 95       	neg	r22
 886:	7f 4f       	sbci	r23, 0xFF	; 255
 888:	8f 4f       	sbci	r24, 0xFF	; 255
 88a:	9f 4f       	sbci	r25, 0xFF	; 255
 88c:	08 95       	ret

0000088e <__fp_inf>:
 88e:	97 f9       	bld	r25, 7
 890:	9f 67       	ori	r25, 0x7F	; 127
 892:	80 e8       	ldi	r24, 0x80	; 128
 894:	70 e0       	ldi	r23, 0x00	; 0
 896:	60 e0       	ldi	r22, 0x00	; 0
 898:	08 95       	ret

0000089a <__fp_nan>:
 89a:	9f ef       	ldi	r25, 0xFF	; 255
 89c:	80 ec       	ldi	r24, 0xC0	; 192
 89e:	08 95       	ret

000008a0 <__fp_pscA>:
 8a0:	00 24       	eor	r0, r0
 8a2:	0a 94       	dec	r0
 8a4:	16 16       	cp	r1, r22
 8a6:	17 06       	cpc	r1, r23
 8a8:	18 06       	cpc	r1, r24
 8aa:	09 06       	cpc	r0, r25
 8ac:	08 95       	ret

000008ae <__fp_pscB>:
 8ae:	00 24       	eor	r0, r0
 8b0:	0a 94       	dec	r0
 8b2:	12 16       	cp	r1, r18
 8b4:	13 06       	cpc	r1, r19
 8b6:	14 06       	cpc	r1, r20
 8b8:	05 06       	cpc	r0, r21
 8ba:	08 95       	ret

000008bc <__fp_round>:
 8bc:	09 2e       	mov	r0, r25
 8be:	03 94       	inc	r0
 8c0:	00 0c       	add	r0, r0
 8c2:	11 f4       	brne	.+4      	; 0x8c8 <__fp_round+0xc>
 8c4:	88 23       	and	r24, r24
 8c6:	52 f0       	brmi	.+20     	; 0x8dc <__fp_round+0x20>
 8c8:	bb 0f       	add	r27, r27
 8ca:	40 f4       	brcc	.+16     	; 0x8dc <__fp_round+0x20>
 8cc:	bf 2b       	or	r27, r31
 8ce:	11 f4       	brne	.+4      	; 0x8d4 <__fp_round+0x18>
 8d0:	60 ff       	sbrs	r22, 0
 8d2:	04 c0       	rjmp	.+8      	; 0x8dc <__fp_round+0x20>
 8d4:	6f 5f       	subi	r22, 0xFF	; 255
 8d6:	7f 4f       	sbci	r23, 0xFF	; 255
 8d8:	8f 4f       	sbci	r24, 0xFF	; 255
 8da:	9f 4f       	sbci	r25, 0xFF	; 255
 8dc:	08 95       	ret

000008de <__fp_split3>:
 8de:	57 fd       	sbrc	r21, 7
 8e0:	90 58       	subi	r25, 0x80	; 128
 8e2:	44 0f       	add	r20, r20
 8e4:	55 1f       	adc	r21, r21
 8e6:	59 f0       	breq	.+22     	; 0x8fe <__fp_splitA+0x10>
 8e8:	5f 3f       	cpi	r21, 0xFF	; 255
 8ea:	71 f0       	breq	.+28     	; 0x908 <__fp_splitA+0x1a>
 8ec:	47 95       	ror	r20

000008ee <__fp_splitA>:
 8ee:	88 0f       	add	r24, r24
 8f0:	97 fb       	bst	r25, 7
 8f2:	99 1f       	adc	r25, r25
 8f4:	61 f0       	breq	.+24     	; 0x90e <__fp_splitA+0x20>
 8f6:	9f 3f       	cpi	r25, 0xFF	; 255
 8f8:	79 f0       	breq	.+30     	; 0x918 <__fp_splitA+0x2a>
 8fa:	87 95       	ror	r24
 8fc:	08 95       	ret
 8fe:	12 16       	cp	r1, r18
 900:	13 06       	cpc	r1, r19
 902:	14 06       	cpc	r1, r20
 904:	55 1f       	adc	r21, r21
 906:	f2 cf       	rjmp	.-28     	; 0x8ec <__fp_split3+0xe>
 908:	46 95       	lsr	r20
 90a:	f1 df       	rcall	.-30     	; 0x8ee <__fp_splitA>
 90c:	08 c0       	rjmp	.+16     	; 0x91e <__fp_splitA+0x30>
 90e:	16 16       	cp	r1, r22
 910:	17 06       	cpc	r1, r23
 912:	18 06       	cpc	r1, r24
 914:	99 1f       	adc	r25, r25
 916:	f1 cf       	rjmp	.-30     	; 0x8fa <__fp_splitA+0xc>
 918:	86 95       	lsr	r24
 91a:	71 05       	cpc	r23, r1
 91c:	61 05       	cpc	r22, r1
 91e:	08 94       	sec
 920:	08 95       	ret

00000922 <__fp_zero>:
 922:	e8 94       	clt

00000924 <__fp_szero>:
 924:	bb 27       	eor	r27, r27
 926:	66 27       	eor	r22, r22
 928:	77 27       	eor	r23, r23
 92a:	cb 01       	movw	r24, r22
 92c:	97 f9       	bld	r25, 7
 92e:	08 95       	ret

00000930 <__mulsf3>:
 930:	0b d0       	rcall	.+22     	; 0x948 <__mulsf3x>
 932:	c4 cf       	rjmp	.-120    	; 0x8bc <__fp_round>
 934:	b5 df       	rcall	.-150    	; 0x8a0 <__fp_pscA>
 936:	28 f0       	brcs	.+10     	; 0x942 <__mulsf3+0x12>
 938:	ba df       	rcall	.-140    	; 0x8ae <__fp_pscB>
 93a:	18 f0       	brcs	.+6      	; 0x942 <__mulsf3+0x12>
 93c:	95 23       	and	r25, r21
 93e:	09 f0       	breq	.+2      	; 0x942 <__mulsf3+0x12>
 940:	a6 cf       	rjmp	.-180    	; 0x88e <__fp_inf>
 942:	ab cf       	rjmp	.-170    	; 0x89a <__fp_nan>
 944:	11 24       	eor	r1, r1
 946:	ee cf       	rjmp	.-36     	; 0x924 <__fp_szero>

00000948 <__mulsf3x>:
 948:	ca df       	rcall	.-108    	; 0x8de <__fp_split3>
 94a:	a0 f3       	brcs	.-24     	; 0x934 <__mulsf3+0x4>

0000094c <__mulsf3_pse>:
 94c:	95 9f       	mul	r25, r21
 94e:	d1 f3       	breq	.-12     	; 0x944 <__mulsf3+0x14>
 950:	95 0f       	add	r25, r21
 952:	50 e0       	ldi	r21, 0x00	; 0
 954:	55 1f       	adc	r21, r21
 956:	62 9f       	mul	r22, r18
 958:	f0 01       	movw	r30, r0
 95a:	72 9f       	mul	r23, r18
 95c:	bb 27       	eor	r27, r27
 95e:	f0 0d       	add	r31, r0
 960:	b1 1d       	adc	r27, r1
 962:	63 9f       	mul	r22, r19
 964:	aa 27       	eor	r26, r26
 966:	f0 0d       	add	r31, r0
 968:	b1 1d       	adc	r27, r1
 96a:	aa 1f       	adc	r26, r26
 96c:	64 9f       	mul	r22, r20
 96e:	66 27       	eor	r22, r22
 970:	b0 0d       	add	r27, r0
 972:	a1 1d       	adc	r26, r1
 974:	66 1f       	adc	r22, r22
 976:	82 9f       	mul	r24, r18
 978:	22 27       	eor	r18, r18
 97a:	b0 0d       	add	r27, r0
 97c:	a1 1d       	adc	r26, r1
 97e:	62 1f       	adc	r22, r18
 980:	73 9f       	mul	r23, r19
 982:	b0 0d       	add	r27, r0
 984:	a1 1d       	adc	r26, r1
 986:	62 1f       	adc	r22, r18
 988:	83 9f       	mul	r24, r19
 98a:	a0 0d       	add	r26, r0
 98c:	61 1d       	adc	r22, r1
 98e:	22 1f       	adc	r18, r18
 990:	74 9f       	mul	r23, r20
 992:	33 27       	eor	r19, r19
 994:	a0 0d       	add	r26, r0
 996:	61 1d       	adc	r22, r1
 998:	23 1f       	adc	r18, r19
 99a:	84 9f       	mul	r24, r20
 99c:	60 0d       	add	r22, r0
 99e:	21 1d       	adc	r18, r1
 9a0:	82 2f       	mov	r24, r18
 9a2:	76 2f       	mov	r23, r22
 9a4:	6a 2f       	mov	r22, r26
 9a6:	11 24       	eor	r1, r1
 9a8:	9f 57       	subi	r25, 0x7F	; 127
 9aa:	50 40       	sbci	r21, 0x00	; 0
 9ac:	8a f0       	brmi	.+34     	; 0x9d0 <__mulsf3_pse+0x84>
 9ae:	e1 f0       	breq	.+56     	; 0x9e8 <__mulsf3_pse+0x9c>
 9b0:	88 23       	and	r24, r24
 9b2:	4a f0       	brmi	.+18     	; 0x9c6 <__mulsf3_pse+0x7a>
 9b4:	ee 0f       	add	r30, r30
 9b6:	ff 1f       	adc	r31, r31
 9b8:	bb 1f       	adc	r27, r27
 9ba:	66 1f       	adc	r22, r22
 9bc:	77 1f       	adc	r23, r23
 9be:	88 1f       	adc	r24, r24
 9c0:	91 50       	subi	r25, 0x01	; 1
 9c2:	50 40       	sbci	r21, 0x00	; 0
 9c4:	a9 f7       	brne	.-22     	; 0x9b0 <__mulsf3_pse+0x64>
 9c6:	9e 3f       	cpi	r25, 0xFE	; 254
 9c8:	51 05       	cpc	r21, r1
 9ca:	70 f0       	brcs	.+28     	; 0x9e8 <__mulsf3_pse+0x9c>
 9cc:	60 cf       	rjmp	.-320    	; 0x88e <__fp_inf>
 9ce:	aa cf       	rjmp	.-172    	; 0x924 <__fp_szero>
 9d0:	5f 3f       	cpi	r21, 0xFF	; 255
 9d2:	ec f3       	brlt	.-6      	; 0x9ce <__mulsf3_pse+0x82>
 9d4:	98 3e       	cpi	r25, 0xE8	; 232
 9d6:	dc f3       	brlt	.-10     	; 0x9ce <__mulsf3_pse+0x82>
 9d8:	86 95       	lsr	r24
 9da:	77 95       	ror	r23
 9dc:	67 95       	ror	r22
 9de:	b7 95       	ror	r27
 9e0:	f7 95       	ror	r31
 9e2:	e7 95       	ror	r30
 9e4:	9f 5f       	subi	r25, 0xFF	; 255
 9e6:	c1 f7       	brne	.-16     	; 0x9d8 <__mulsf3_pse+0x8c>
 9e8:	fe 2b       	or	r31, r30
 9ea:	88 0f       	add	r24, r24
 9ec:	91 1d       	adc	r25, r1
 9ee:	96 95       	lsr	r25
 9f0:	87 95       	ror	r24
 9f2:	97 f9       	bld	r25, 7
 9f4:	08 95       	ret

000009f6 <_exit>:
 9f6:	f8 94       	cli

000009f8 <__stop_program>:
 9f8:	ff cf       	rjmp	.-2      	; 0x9f8 <__stop_program>
